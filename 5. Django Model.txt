#### ORM => Object-Relational Mapper is a programming technique that helps
application to interact with database such as SQLite, MySQL, PostgreSQL, Oracle.
* generate SQL from Python code
* পাইথন কোডকে SQL-এ কনভার্ট করে

####### QuerySet =>>>>>> A QuerySet can be defined as a list containing 
all those objects we have created using the Django model.
Model ক্লাসের সবগুলো অবজেক্টের লিস্টকে বলব QuerySet.
QuerySet help us__
1. read the data from the database
2. filter it
3. order it.

###### Model =>>>>> A model is the single, definitive source of information about our data.

It contains the__
1. essential fields and behaviors of the data.
2. each model maps to a single database table.


########### Model Class =>>>>
মডেল ক্লাস হলো এমন একটি পাইথন ক্লাস যা ডেটাবেজের একটি টেবিলকে নির্দেশ করে

* Model class is a class which will represent a table in database.
* It is a Python class that subclasses django.db.models.Model
* Each attribute represents a database field.
* Django gives automatically-generated database-access API
* Django provides sqlite database by default.
* We can use other database like MySQL, Oracle SQL etc.


####### Migrations =>>>>>
Migrations are way of changes to make models into your database schema.
1. makemigrations :convert model class into sql statements.
পাইথন কোডকে (মডেল ক্লাসকে ) SQL-এ কনভার্ট করে একটি ফাইলে রাখা । 

	cmd => python manage.py makemigrations

2. migrate : is used to execute sql statements generated by makemigrations
 makemigrations এর ফলে তৈরি হওয়া SQL স্টেট্মেন্টগুলো এক্সিকিউট করা হয়

 	cmd => python manage.py migrate


###### Built in model field =>>>>>>>>
1. null :- contain either True or False. If True, Django will store empty values
as NULL in the database. Default is False.

2. blank :– contain either True or False. If True, the field is allowed to be blank.
	Note : null is purely database-related, whereas blank is validation-related.

3. default :- default value for the field.

4. verbose_name :- A human-readable name for the field. If the verbose name isn’t given, 
Django will automatically create it using the field’s attribute name,converting underscores to spaces.

5. db_column :- The name of the database column to use for this field. If this
isn’t given, Django will use the field’s name.

6. primary_key :– If True, that field will be the primary key for the model.

7. unique :- If True, this field must be unique throughout the table. This is
enforced at the database level and by model validation.

###### some model field =>>>>>>
1. IntegerField
2. AutoField
3. FloatField
4. TextField
5. CharField
6. BooleanField
7. EmailField
8. URLField




########## db.sqlite3 =>> 

db.sqlite3 ফাইলের মধ্যে database টেবিল টি দেখ।র জন্য  VS Code -এ SQLite ও SQLite Viewer এক্সটেনশন দুইটি ইন্সটল করে ফেলি।


########## Admin panal =>>>>>>>>
create -> python manage.py createsuperuser

admin.py -> registration model class __ 
	from django.contrib import admin
	from . import models
	# Register your models here.
	admin.site.register(models.Model_class_ name)

model.py => অবেজেক্টের লিস্ট আরো সুন্দরভাবে দেখতে , models.py ফাইলে Student মডেলে একটি __str__() মেথড 
    def __str__(self):
        return f"Roll : {self.roll} - {self.name}"
